/* soapH.h
   Generated by gSOAP 2.8.16 from ndfd.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "weather_cpp/soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_time(soap, data),0) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__displayLevelType
#define SOAP_TYPE_ns2__displayLevelType (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__displayLevelType(struct soap*, enum ns2__displayLevelType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__displayLevelType(struct soap*, const char*, int, const enum ns2__displayLevelType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__displayLevelType2s(struct soap*, enum ns2__displayLevelType);
SOAP_FMAC3 enum ns2__displayLevelType * SOAP_FMAC4 soap_in_ns2__displayLevelType(struct soap*, const char*, enum ns2__displayLevelType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__displayLevelType(struct soap*, const char*, enum ns2__displayLevelType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__displayLevelType(struct soap*, const enum ns2__displayLevelType *, const char*, const char*);

#ifndef soap_write_ns2__displayLevelType
#define soap_write_ns2__displayLevelType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__displayLevelType(soap, data),0) || soap_put_ns2__displayLevelType(soap, data, "ns2:displayLevelType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__displayLevelType * SOAP_FMAC4 soap_get_ns2__displayLevelType(struct soap*, enum ns2__displayLevelType *, const char*, const char*);

#ifndef soap_read_ns2__displayLevelType
#define soap_read_ns2__displayLevelType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__displayLevelType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__compTypeType
#define SOAP_TYPE_ns2__compTypeType (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__compTypeType(struct soap*, enum ns2__compTypeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__compTypeType(struct soap*, const char*, int, const enum ns2__compTypeType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__compTypeType2s(struct soap*, enum ns2__compTypeType);
SOAP_FMAC3 enum ns2__compTypeType * SOAP_FMAC4 soap_in_ns2__compTypeType(struct soap*, const char*, enum ns2__compTypeType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__compTypeType(struct soap*, const char*, enum ns2__compTypeType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__compTypeType(struct soap*, const enum ns2__compTypeType *, const char*, const char*);

#ifndef soap_write_ns2__compTypeType
#define soap_write_ns2__compTypeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__compTypeType(soap, data),0) || soap_put_ns2__compTypeType(soap, data, "ns2:compTypeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__compTypeType * SOAP_FMAC4 soap_get_ns2__compTypeType(struct soap*, enum ns2__compTypeType *, const char*, const char*);

#ifndef soap_read_ns2__compTypeType
#define soap_read_ns2__compTypeType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__compTypeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__featureTypeType
#define SOAP_TYPE_ns2__featureTypeType (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__featureTypeType(struct soap*, enum ns2__featureTypeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__featureTypeType(struct soap*, const char*, int, const enum ns2__featureTypeType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__featureTypeType2s(struct soap*, enum ns2__featureTypeType);
SOAP_FMAC3 enum ns2__featureTypeType * SOAP_FMAC4 soap_in_ns2__featureTypeType(struct soap*, const char*, enum ns2__featureTypeType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__featureTypeType(struct soap*, const char*, enum ns2__featureTypeType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__featureTypeType(struct soap*, const enum ns2__featureTypeType *, const char*, const char*);

#ifndef soap_write_ns2__featureTypeType
#define soap_write_ns2__featureTypeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__featureTypeType(soap, data),0) || soap_put_ns2__featureTypeType(soap, data, "ns2:featureTypeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__featureTypeType * SOAP_FMAC4 soap_get_ns2__featureTypeType(struct soap*, enum ns2__featureTypeType *, const char*, const char*);

#ifndef soap_read_ns2__featureTypeType
#define soap_read_ns2__featureTypeType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__featureTypeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__productType
#define SOAP_TYPE_ns2__productType (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__productType(struct soap*, enum ns2__productType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__productType(struct soap*, const char*, int, const enum ns2__productType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__productType2s(struct soap*, enum ns2__productType);
SOAP_FMAC3 enum ns2__productType * SOAP_FMAC4 soap_in_ns2__productType(struct soap*, const char*, enum ns2__productType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__productType(struct soap*, const char*, enum ns2__productType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__productType(struct soap*, const enum ns2__productType *, const char*, const char*);

#ifndef soap_write_ns2__productType
#define soap_write_ns2__productType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__productType(soap, data),0) || soap_put_ns2__productType(soap, data, "ns2:productType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__productType * SOAP_FMAC4 soap_get_ns2__productType(struct soap*, enum ns2__productType *, const char*, const char*);

#ifndef soap_read_ns2__productType
#define soap_read_ns2__productType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__productType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__formatType
#define SOAP_TYPE_ns2__formatType (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__formatType(struct soap*, enum ns2__formatType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__formatType(struct soap*, const char*, int, const enum ns2__formatType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__formatType2s(struct soap*, enum ns2__formatType);
SOAP_FMAC3 enum ns2__formatType * SOAP_FMAC4 soap_in_ns2__formatType(struct soap*, const char*, enum ns2__formatType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__formatType(struct soap*, const char*, enum ns2__formatType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__formatType(struct soap*, const enum ns2__formatType *, const char*, const char*);

#ifndef soap_write_ns2__formatType
#define soap_write_ns2__formatType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__formatType(soap, data),0) || soap_put_ns2__formatType(soap, data, "ns2:formatType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__formatType * SOAP_FMAC4 soap_get_ns2__formatType(struct soap*, enum ns2__formatType *, const char*, const char*);

#ifndef soap_read_ns2__formatType
#define soap_read_ns2__formatType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__formatType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__unitType
#define SOAP_TYPE_ns2__unitType (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__unitType(struct soap*, enum ns2__unitType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__unitType(struct soap*, const char*, int, const enum ns2__unitType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__unitType2s(struct soap*, enum ns2__unitType);
SOAP_FMAC3 enum ns2__unitType * SOAP_FMAC4 soap_in_ns2__unitType(struct soap*, const char*, enum ns2__unitType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__unitType(struct soap*, const char*, enum ns2__unitType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__unitType(struct soap*, const enum ns2__unitType *, const char*, const char*);

#ifndef soap_write_ns2__unitType
#define soap_write_ns2__unitType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__unitType(soap, data),0) || soap_put_ns2__unitType(soap, data, "ns2:unitType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__unitType * SOAP_FMAC4 soap_get_ns2__unitType(struct soap*, enum ns2__unitType *, const char*, const char*);

#ifndef soap_read_ns2__unitType
#define soap_read_ns2__unitType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__unitType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__sectorType
#define SOAP_TYPE_ns2__sectorType (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__sectorType(struct soap*, enum ns2__sectorType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__sectorType(struct soap*, const char*, int, const enum ns2__sectorType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__sectorType2s(struct soap*, enum ns2__sectorType);
SOAP_FMAC3 enum ns2__sectorType * SOAP_FMAC4 soap_in_ns2__sectorType(struct soap*, const char*, enum ns2__sectorType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__sectorType(struct soap*, const char*, enum ns2__sectorType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__sectorType(struct soap*, const enum ns2__sectorType *, const char*, const char*);

#ifndef soap_write_ns2__sectorType
#define soap_write_ns2__sectorType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__sectorType(soap, data),0) || soap_put_ns2__sectorType(soap, data, "ns2:sectorType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__sectorType * SOAP_FMAC4 soap_get_ns2__sectorType(struct soap*, enum ns2__sectorType *, const char*, const char*);

#ifndef soap_read_ns2__sectorType
#define soap_read_ns2__sectorType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__sectorType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__listCityNamesType
#define SOAP_TYPE_ns2__listCityNamesType (23)
#endif

#define soap_default_ns2__listCityNamesType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__listCityNamesType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__listCityNamesType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__listCityNamesType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__listCityNamesType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__listCityNamesType
#define soap_write_ns2__listCityNamesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__listCityNamesType(soap, data),0) || soap_put_ns2__listCityNamesType(soap, data, "ns2:listCityNamesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__listCityNamesType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__listCityNamesType
#define soap_read_ns2__listCityNamesType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__listCityNamesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns2__listCityNamesType soap_instantiate_std__string


#define soap_copy_ns2__listCityNamesType soap_copy_std__string

#ifndef SOAP_TYPE_ns2__zipCodeListType
#define SOAP_TYPE_ns2__zipCodeListType (20)
#endif

#define soap_default_ns2__zipCodeListType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__zipCodeListType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__zipCodeListType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__zipCodeListType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__zipCodeListType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__zipCodeListType
#define soap_write_ns2__zipCodeListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__zipCodeListType(soap, data),0) || soap_put_ns2__zipCodeListType(soap, data, "ns2:zipCodeListType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__zipCodeListType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__zipCodeListType
#define soap_read_ns2__zipCodeListType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__zipCodeListType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns2__zipCodeListType soap_instantiate_std__string


#define soap_copy_ns2__zipCodeListType soap_copy_std__string

#ifndef SOAP_TYPE_ns2__zipCodeType
#define SOAP_TYPE_ns2__zipCodeType (19)
#endif

#define soap_default_ns2__zipCodeType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__zipCodeType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__zipCodeType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__zipCodeType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__zipCodeType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__zipCodeType
#define soap_write_ns2__zipCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__zipCodeType(soap, data),0) || soap_put_ns2__zipCodeType(soap, data, "ns2:zipCodeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__zipCodeType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__zipCodeType
#define soap_read_ns2__zipCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__zipCodeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns2__zipCodeType soap_instantiate_std__string


#define soap_copy_ns2__zipCodeType soap_copy_std__string

#ifndef SOAP_TYPE_ns2__listLatLonType
#define SOAP_TYPE_ns2__listLatLonType (18)
#endif

#define soap_default_ns2__listLatLonType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__listLatLonType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__listLatLonType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__listLatLonType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__listLatLonType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__listLatLonType
#define soap_write_ns2__listLatLonType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__listLatLonType(soap, data),0) || soap_put_ns2__listLatLonType(soap, data, "ns2:listLatLonType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__listLatLonType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__listLatLonType
#define soap_read_ns2__listLatLonType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__listLatLonType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns2__listLatLonType soap_instantiate_std__string


#define soap_copy_ns2__listLatLonType soap_copy_std__string

#ifndef SOAP_TYPE_ns2__latLonPairType
#define SOAP_TYPE_ns2__latLonPairType (17)
#endif

#define soap_default_ns2__latLonPairType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__latLonPairType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__latLonPairType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__latLonPairType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__latLonPairType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__latLonPairType
#define soap_write_ns2__latLonPairType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__latLonPairType(soap, data),0) || soap_put_ns2__latLonPairType(soap, data, "ns2:latLonPairType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__latLonPairType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__latLonPairType
#define soap_read_ns2__latLonPairType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__latLonPairType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns2__latLonPairType soap_instantiate_std__string


#define soap_copy_ns2__latLonPairType soap_copy_std__string

#ifndef SOAP_TYPE_ns2__weatherParametersType
#define SOAP_TYPE_ns2__weatherParametersType (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__weatherParametersType(struct soap*, const char*, int, const ns2__weatherParametersType *, const char*);
SOAP_FMAC3 ns2__weatherParametersType * SOAP_FMAC4 soap_in_ns2__weatherParametersType(struct soap*, const char*, ns2__weatherParametersType *, const char*);

#ifndef soap_write_ns2__weatherParametersType
#define soap_write_ns2__weatherParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:weatherParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__weatherParametersType * SOAP_FMAC4 soap_get_ns2__weatherParametersType(struct soap*, ns2__weatherParametersType *, const char*, const char*);

#ifndef soap_read_ns2__weatherParametersType
#define soap_read_ns2__weatherParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__weatherParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__weatherParametersType * SOAP_FMAC2 soap_instantiate_ns2__weatherParametersType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__weatherParametersType * soap_new_ns2__weatherParametersType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__weatherParametersType(soap, n, NULL, NULL, NULL); }

inline ns2__weatherParametersType * soap_new_req_ns2__weatherParametersType(struct soap *soap, bool maxt, bool mint, bool temp, bool dew, bool pop12, bool qpf, bool sky, bool snow, bool wspd, bool wdir, bool wx, bool waveh, bool icons, bool rh, bool appt, bool incw34, bool incw50, bool incw64, bool cumw34, bool cumw50, bool cumw64, bool critfireo, bool dryfireo, bool conhazo, bool ptornado, bool phail, bool ptstmwinds, bool pxtornado, bool pxhail, bool pxtstmwinds, bool ptotsvrtstm, bool pxtotsvrtstm, bool tmpabv14d, bool tmpblw14d, bool tmpabv30d, bool tmpblw30d, bool tmpabv90d, bool tmpblw90d, bool prcpabv14d, bool prcpblw14d, bool prcpabv30d, bool prcpblw30d, bool prcpabv90d, bool prcpblw90d, bool precipa_USCOREr, bool sky_USCOREr, bool td_USCOREr, bool temp_USCOREr, bool wdir_USCOREr, bool wspd_USCOREr, bool wwa, bool wgust, bool iceaccum, bool maxrh, bool minrh) { ns2__weatherParametersType *_p = soap_instantiate_ns2__weatherParametersType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__weatherParametersType::maxt = maxt; _p->ns2__weatherParametersType::mint = mint; _p->ns2__weatherParametersType::temp = temp; _p->ns2__weatherParametersType::dew = dew; _p->ns2__weatherParametersType::pop12 = pop12; _p->ns2__weatherParametersType::qpf = qpf; _p->ns2__weatherParametersType::sky = sky; _p->ns2__weatherParametersType::snow = snow; _p->ns2__weatherParametersType::wspd = wspd; _p->ns2__weatherParametersType::wdir = wdir; _p->ns2__weatherParametersType::wx = wx; _p->ns2__weatherParametersType::waveh = waveh; _p->ns2__weatherParametersType::icons = icons; _p->ns2__weatherParametersType::rh = rh; _p->ns2__weatherParametersType::appt = appt; _p->ns2__weatherParametersType::incw34 = incw34; _p->ns2__weatherParametersType::incw50 = incw50; _p->ns2__weatherParametersType::incw64 = incw64; _p->ns2__weatherParametersType::cumw34 = cumw34; _p->ns2__weatherParametersType::cumw50 = cumw50; _p->ns2__weatherParametersType::cumw64 = cumw64; _p->ns2__weatherParametersType::critfireo = critfireo; _p->ns2__weatherParametersType::dryfireo = dryfireo; _p->ns2__weatherParametersType::conhazo = conhazo; _p->ns2__weatherParametersType::ptornado = ptornado; _p->ns2__weatherParametersType::phail = phail; _p->ns2__weatherParametersType::ptstmwinds = ptstmwinds; _p->ns2__weatherParametersType::pxtornado = pxtornado; _p->ns2__weatherParametersType::pxhail = pxhail; _p->ns2__weatherParametersType::pxtstmwinds = pxtstmwinds; _p->ns2__weatherParametersType::ptotsvrtstm = ptotsvrtstm; _p->ns2__weatherParametersType::pxtotsvrtstm = pxtotsvrtstm; _p->ns2__weatherParametersType::tmpabv14d = tmpabv14d; _p->ns2__weatherParametersType::tmpblw14d = tmpblw14d; _p->ns2__weatherParametersType::tmpabv30d = tmpabv30d; _p->ns2__weatherParametersType::tmpblw30d = tmpblw30d; _p->ns2__weatherParametersType::tmpabv90d = tmpabv90d; _p->ns2__weatherParametersType::tmpblw90d = tmpblw90d; _p->ns2__weatherParametersType::prcpabv14d = prcpabv14d; _p->ns2__weatherParametersType::prcpblw14d = prcpblw14d; _p->ns2__weatherParametersType::prcpabv30d = prcpabv30d; _p->ns2__weatherParametersType::prcpblw30d = prcpblw30d; _p->ns2__weatherParametersType::prcpabv90d = prcpabv90d; _p->ns2__weatherParametersType::prcpblw90d = prcpblw90d; _p->ns2__weatherParametersType::precipa_USCOREr = precipa_USCOREr; _p->ns2__weatherParametersType::sky_USCOREr = sky_USCOREr; _p->ns2__weatherParametersType::td_USCOREr = td_USCOREr; _p->ns2__weatherParametersType::temp_USCOREr = temp_USCOREr; _p->ns2__weatherParametersType::wdir_USCOREr = wdir_USCOREr; _p->ns2__weatherParametersType::wspd_USCOREr = wspd_USCOREr; _p->ns2__weatherParametersType::wwa = wwa; _p->ns2__weatherParametersType::wgust = wgust; _p->ns2__weatherParametersType::iceaccum = iceaccum; _p->ns2__weatherParametersType::maxrh = maxrh; _p->ns2__weatherParametersType::minrh = minrh; } return _p; }

inline ns2__weatherParametersType * soap_new_set_ns2__weatherParametersType(struct soap *soap, bool maxt, bool mint, bool temp, bool dew, bool pop12, bool qpf, bool sky, bool snow, bool wspd, bool wdir, bool wx, bool waveh, bool icons, bool rh, bool appt, bool incw34, bool incw50, bool incw64, bool cumw34, bool cumw50, bool cumw64, bool critfireo, bool dryfireo, bool conhazo, bool ptornado, bool phail, bool ptstmwinds, bool pxtornado, bool pxhail, bool pxtstmwinds, bool ptotsvrtstm, bool pxtotsvrtstm, bool tmpabv14d, bool tmpblw14d, bool tmpabv30d, bool tmpblw30d, bool tmpabv90d, bool tmpblw90d, bool prcpabv14d, bool prcpblw14d, bool prcpabv30d, bool prcpblw30d, bool prcpabv90d, bool prcpblw90d, bool precipa_USCOREr, bool sky_USCOREr, bool td_USCOREr, bool temp_USCOREr, bool wdir_USCOREr, bool wspd_USCOREr, bool wwa, bool wgust, bool iceaccum, bool maxrh, bool minrh) { ns2__weatherParametersType *_p = soap_instantiate_ns2__weatherParametersType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__weatherParametersType::maxt = maxt; _p->ns2__weatherParametersType::mint = mint; _p->ns2__weatherParametersType::temp = temp; _p->ns2__weatherParametersType::dew = dew; _p->ns2__weatherParametersType::pop12 = pop12; _p->ns2__weatherParametersType::qpf = qpf; _p->ns2__weatherParametersType::sky = sky; _p->ns2__weatherParametersType::snow = snow; _p->ns2__weatherParametersType::wspd = wspd; _p->ns2__weatherParametersType::wdir = wdir; _p->ns2__weatherParametersType::wx = wx; _p->ns2__weatherParametersType::waveh = waveh; _p->ns2__weatherParametersType::icons = icons; _p->ns2__weatherParametersType::rh = rh; _p->ns2__weatherParametersType::appt = appt; _p->ns2__weatherParametersType::incw34 = incw34; _p->ns2__weatherParametersType::incw50 = incw50; _p->ns2__weatherParametersType::incw64 = incw64; _p->ns2__weatherParametersType::cumw34 = cumw34; _p->ns2__weatherParametersType::cumw50 = cumw50; _p->ns2__weatherParametersType::cumw64 = cumw64; _p->ns2__weatherParametersType::critfireo = critfireo; _p->ns2__weatherParametersType::dryfireo = dryfireo; _p->ns2__weatherParametersType::conhazo = conhazo; _p->ns2__weatherParametersType::ptornado = ptornado; _p->ns2__weatherParametersType::phail = phail; _p->ns2__weatherParametersType::ptstmwinds = ptstmwinds; _p->ns2__weatherParametersType::pxtornado = pxtornado; _p->ns2__weatherParametersType::pxhail = pxhail; _p->ns2__weatherParametersType::pxtstmwinds = pxtstmwinds; _p->ns2__weatherParametersType::ptotsvrtstm = ptotsvrtstm; _p->ns2__weatherParametersType::pxtotsvrtstm = pxtotsvrtstm; _p->ns2__weatherParametersType::tmpabv14d = tmpabv14d; _p->ns2__weatherParametersType::tmpblw14d = tmpblw14d; _p->ns2__weatherParametersType::tmpabv30d = tmpabv30d; _p->ns2__weatherParametersType::tmpblw30d = tmpblw30d; _p->ns2__weatherParametersType::tmpabv90d = tmpabv90d; _p->ns2__weatherParametersType::tmpblw90d = tmpblw90d; _p->ns2__weatherParametersType::prcpabv14d = prcpabv14d; _p->ns2__weatherParametersType::prcpblw14d = prcpblw14d; _p->ns2__weatherParametersType::prcpabv30d = prcpabv30d; _p->ns2__weatherParametersType::prcpblw30d = prcpblw30d; _p->ns2__weatherParametersType::prcpabv90d = prcpabv90d; _p->ns2__weatherParametersType::prcpblw90d = prcpblw90d; _p->ns2__weatherParametersType::precipa_USCOREr = precipa_USCOREr; _p->ns2__weatherParametersType::sky_USCOREr = sky_USCOREr; _p->ns2__weatherParametersType::td_USCOREr = td_USCOREr; _p->ns2__weatherParametersType::temp_USCOREr = temp_USCOREr; _p->ns2__weatherParametersType::wdir_USCOREr = wdir_USCOREr; _p->ns2__weatherParametersType::wspd_USCOREr = wspd_USCOREr; _p->ns2__weatherParametersType::wwa = wwa; _p->ns2__weatherParametersType::wgust = wgust; _p->ns2__weatherParametersType::iceaccum = iceaccum; _p->ns2__weatherParametersType::maxrh = maxrh; _p->ns2__weatherParametersType::minrh = minrh; } return _p; }

inline void soap_delete_ns2__weatherParametersType(struct soap *soap, ns2__weatherParametersType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__weatherParametersType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (11)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__integer(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__integer(soap, data),0) || soap_put_xsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__integer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__integer soap_instantiate_std__string


#define soap_copy_xsd__integer soap_copy_std__string

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (10)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__decimal(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__decimal
#define soap_write_xsd__decimal(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__decimal(soap, data),0) || soap_put_xsd__decimal(soap, data, "xsd:decimal", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__decimal
#define soap_read_xsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__decimal soap_instantiate_std__string


#define soap_copy_xsd__decimal soap_copy_std__string

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (9)
#endif

#define soap_default_xsd__date(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__date
#define soap_write_xsd__date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__date(soap, data),0) || soap_put_xsd__date(soap, data, "xsd:date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__date(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__date
#define soap_read_xsd__date(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__date(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__date soap_instantiate_std__string


#define soap_copy_xsd__date soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data),0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__LatLonListCityNames
#define SOAP_TYPE_ns1__LatLonListCityNames (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListCityNames(struct soap*, struct ns1__LatLonListCityNames *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListCityNames(struct soap*, const struct ns1__LatLonListCityNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListCityNames(struct soap*, const char*, int, const struct ns1__LatLonListCityNames *, const char*);
SOAP_FMAC3 struct ns1__LatLonListCityNames * SOAP_FMAC4 soap_in_ns1__LatLonListCityNames(struct soap*, const char*, struct ns1__LatLonListCityNames *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListCityNames(struct soap*, const struct ns1__LatLonListCityNames *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListCityNames
#define soap_write_ns1__LatLonListCityNames(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListCityNames(soap, data),0) || soap_put_ns1__LatLonListCityNames(soap, data, "ns1:LatLonListCityNames", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListCityNames * SOAP_FMAC4 soap_get_ns1__LatLonListCityNames(struct soap*, struct ns1__LatLonListCityNames *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListCityNames
#define soap_read_ns1__LatLonListCityNames(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListCityNames(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListCityNames * SOAP_FMAC2 soap_instantiate_ns1__LatLonListCityNames(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListCityNames * soap_new_ns1__LatLonListCityNames(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListCityNames(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListCityNames * soap_new_req_ns1__LatLonListCityNames(struct soap *soap, enum ns2__displayLevelType displayLevel) { struct ns1__LatLonListCityNames *_p = soap_instantiate_ns1__LatLonListCityNames(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListCityNames(soap, _p); _p->displayLevel = displayLevel; } return _p; }

inline struct ns1__LatLonListCityNames * soap_new_set_ns1__LatLonListCityNames(struct soap *soap, enum ns2__displayLevelType displayLevel) { struct ns1__LatLonListCityNames *_p = soap_instantiate_ns1__LatLonListCityNames(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListCityNames(soap, _p); _p->displayLevel = displayLevel; } return _p; }

inline void soap_delete_ns1__LatLonListCityNames(struct soap *soap, struct ns1__LatLonListCityNames *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListCityNames(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListCityNamesResponse
#define SOAP_TYPE_ns1__LatLonListCityNamesResponse (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListCityNamesResponse(struct soap*, struct ns1__LatLonListCityNamesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListCityNamesResponse(struct soap*, const struct ns1__LatLonListCityNamesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListCityNamesResponse(struct soap*, const char*, int, const struct ns1__LatLonListCityNamesResponse *, const char*);
SOAP_FMAC3 struct ns1__LatLonListCityNamesResponse * SOAP_FMAC4 soap_in_ns1__LatLonListCityNamesResponse(struct soap*, const char*, struct ns1__LatLonListCityNamesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListCityNamesResponse(struct soap*, const struct ns1__LatLonListCityNamesResponse *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListCityNamesResponse
#define soap_write_ns1__LatLonListCityNamesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListCityNamesResponse(soap, data),0) || soap_put_ns1__LatLonListCityNamesResponse(soap, data, "ns1:LatLonListCityNamesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListCityNamesResponse * SOAP_FMAC4 soap_get_ns1__LatLonListCityNamesResponse(struct soap*, struct ns1__LatLonListCityNamesResponse *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListCityNamesResponse
#define soap_read_ns1__LatLonListCityNamesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListCityNamesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListCityNamesResponse * SOAP_FMAC2 soap_instantiate_ns1__LatLonListCityNamesResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListCityNamesResponse * soap_new_ns1__LatLonListCityNamesResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListCityNamesResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListCityNamesResponse * soap_new_req_ns1__LatLonListCityNamesResponse(struct soap *soap, std::string& listCityNamesOut) { struct ns1__LatLonListCityNamesResponse *_p = soap_instantiate_ns1__LatLonListCityNamesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListCityNamesResponse(soap, _p); _p->listCityNamesOut = listCityNamesOut; } return _p; }

inline struct ns1__LatLonListCityNamesResponse * soap_new_set_ns1__LatLonListCityNamesResponse(struct soap *soap, std::string& listCityNamesOut) { struct ns1__LatLonListCityNamesResponse *_p = soap_instantiate_ns1__LatLonListCityNamesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListCityNamesResponse(soap, _p); _p->listCityNamesOut = listCityNamesOut; } return _p; }

inline void soap_delete_ns1__LatLonListCityNamesResponse(struct soap *soap, struct ns1__LatLonListCityNamesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListCityNamesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__CornerPoints
#define SOAP_TYPE_ns1__CornerPoints (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__CornerPoints(struct soap*, struct ns1__CornerPoints *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__CornerPoints(struct soap*, const struct ns1__CornerPoints *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__CornerPoints(struct soap*, const char*, int, const struct ns1__CornerPoints *, const char*);
SOAP_FMAC3 struct ns1__CornerPoints * SOAP_FMAC4 soap_in_ns1__CornerPoints(struct soap*, const char*, struct ns1__CornerPoints *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__CornerPoints(struct soap*, const struct ns1__CornerPoints *, const char*, const char*);

#ifndef soap_write_ns1__CornerPoints
#define soap_write_ns1__CornerPoints(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__CornerPoints(soap, data),0) || soap_put_ns1__CornerPoints(soap, data, "ns1:CornerPoints", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__CornerPoints * SOAP_FMAC4 soap_get_ns1__CornerPoints(struct soap*, struct ns1__CornerPoints *, const char*, const char*);

#ifndef soap_read_ns1__CornerPoints
#define soap_read_ns1__CornerPoints(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__CornerPoints(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__CornerPoints * SOAP_FMAC2 soap_instantiate_ns1__CornerPoints(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__CornerPoints * soap_new_ns1__CornerPoints(struct soap *soap, int n = -1) { return soap_instantiate_ns1__CornerPoints(soap, n, NULL, NULL, NULL); }

inline struct ns1__CornerPoints * soap_new_req_ns1__CornerPoints(struct soap *soap, enum ns2__sectorType sector) { struct ns1__CornerPoints *_p = soap_instantiate_ns1__CornerPoints(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__CornerPoints(soap, _p); _p->sector = sector; } return _p; }

inline struct ns1__CornerPoints * soap_new_set_ns1__CornerPoints(struct soap *soap, enum ns2__sectorType sector) { struct ns1__CornerPoints *_p = soap_instantiate_ns1__CornerPoints(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__CornerPoints(soap, _p); _p->sector = sector; } return _p; }

inline void soap_delete_ns1__CornerPoints(struct soap *soap, struct ns1__CornerPoints *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__CornerPoints(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__CornerPointsResponse
#define SOAP_TYPE_ns1__CornerPointsResponse (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__CornerPointsResponse(struct soap*, struct ns1__CornerPointsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__CornerPointsResponse(struct soap*, const struct ns1__CornerPointsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__CornerPointsResponse(struct soap*, const char*, int, const struct ns1__CornerPointsResponse *, const char*);
SOAP_FMAC3 struct ns1__CornerPointsResponse * SOAP_FMAC4 soap_in_ns1__CornerPointsResponse(struct soap*, const char*, struct ns1__CornerPointsResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__CornerPointsResponse(struct soap*, const struct ns1__CornerPointsResponse *, const char*, const char*);

#ifndef soap_write_ns1__CornerPointsResponse
#define soap_write_ns1__CornerPointsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__CornerPointsResponse(soap, data),0) || soap_put_ns1__CornerPointsResponse(soap, data, "ns1:CornerPointsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__CornerPointsResponse * SOAP_FMAC4 soap_get_ns1__CornerPointsResponse(struct soap*, struct ns1__CornerPointsResponse *, const char*, const char*);

#ifndef soap_read_ns1__CornerPointsResponse
#define soap_read_ns1__CornerPointsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__CornerPointsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__CornerPointsResponse * SOAP_FMAC2 soap_instantiate_ns1__CornerPointsResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__CornerPointsResponse * soap_new_ns1__CornerPointsResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__CornerPointsResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__CornerPointsResponse * soap_new_req_ns1__CornerPointsResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__CornerPointsResponse *_p = soap_instantiate_ns1__CornerPointsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__CornerPointsResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline struct ns1__CornerPointsResponse * soap_new_set_ns1__CornerPointsResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__CornerPointsResponse *_p = soap_instantiate_ns1__CornerPointsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__CornerPointsResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline void soap_delete_ns1__CornerPointsResponse(struct soap *soap, struct ns1__CornerPointsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__CornerPointsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListSquare
#define SOAP_TYPE_ns1__LatLonListSquare (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListSquare(struct soap*, struct ns1__LatLonListSquare *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListSquare(struct soap*, const struct ns1__LatLonListSquare *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListSquare(struct soap*, const char*, int, const struct ns1__LatLonListSquare *, const char*);
SOAP_FMAC3 struct ns1__LatLonListSquare * SOAP_FMAC4 soap_in_ns1__LatLonListSquare(struct soap*, const char*, struct ns1__LatLonListSquare *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListSquare(struct soap*, const struct ns1__LatLonListSquare *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListSquare
#define soap_write_ns1__LatLonListSquare(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListSquare(soap, data),0) || soap_put_ns1__LatLonListSquare(soap, data, "ns1:LatLonListSquare", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListSquare * SOAP_FMAC4 soap_get_ns1__LatLonListSquare(struct soap*, struct ns1__LatLonListSquare *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListSquare
#define soap_read_ns1__LatLonListSquare(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListSquare(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListSquare * SOAP_FMAC2 soap_instantiate_ns1__LatLonListSquare(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListSquare * soap_new_ns1__LatLonListSquare(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListSquare(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListSquare * soap_new_req_ns1__LatLonListSquare(struct soap *soap, std::string& centerPointLat, std::string& centerPointLon, std::string& distanceLat, std::string& distanceLon, std::string& resolution) { struct ns1__LatLonListSquare *_p = soap_instantiate_ns1__LatLonListSquare(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSquare(soap, _p); _p->centerPointLat = centerPointLat; _p->centerPointLon = centerPointLon; _p->distanceLat = distanceLat; _p->distanceLon = distanceLon; _p->resolution = resolution; } return _p; }

inline struct ns1__LatLonListSquare * soap_new_set_ns1__LatLonListSquare(struct soap *soap, std::string& centerPointLat, std::string& centerPointLon, std::string& distanceLat, std::string& distanceLon, std::string& resolution) { struct ns1__LatLonListSquare *_p = soap_instantiate_ns1__LatLonListSquare(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSquare(soap, _p); _p->centerPointLat = centerPointLat; _p->centerPointLon = centerPointLon; _p->distanceLat = distanceLat; _p->distanceLon = distanceLon; _p->resolution = resolution; } return _p; }

inline void soap_delete_ns1__LatLonListSquare(struct soap *soap, struct ns1__LatLonListSquare *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListSquare(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListSquareResponse
#define SOAP_TYPE_ns1__LatLonListSquareResponse (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListSquareResponse(struct soap*, struct ns1__LatLonListSquareResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListSquareResponse(struct soap*, const struct ns1__LatLonListSquareResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListSquareResponse(struct soap*, const char*, int, const struct ns1__LatLonListSquareResponse *, const char*);
SOAP_FMAC3 struct ns1__LatLonListSquareResponse * SOAP_FMAC4 soap_in_ns1__LatLonListSquareResponse(struct soap*, const char*, struct ns1__LatLonListSquareResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListSquareResponse(struct soap*, const struct ns1__LatLonListSquareResponse *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListSquareResponse
#define soap_write_ns1__LatLonListSquareResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListSquareResponse(soap, data),0) || soap_put_ns1__LatLonListSquareResponse(soap, data, "ns1:LatLonListSquareResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListSquareResponse * SOAP_FMAC4 soap_get_ns1__LatLonListSquareResponse(struct soap*, struct ns1__LatLonListSquareResponse *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListSquareResponse
#define soap_read_ns1__LatLonListSquareResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListSquareResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListSquareResponse * SOAP_FMAC2 soap_instantiate_ns1__LatLonListSquareResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListSquareResponse * soap_new_ns1__LatLonListSquareResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListSquareResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListSquareResponse * soap_new_req_ns1__LatLonListSquareResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListSquareResponse *_p = soap_instantiate_ns1__LatLonListSquareResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSquareResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline struct ns1__LatLonListSquareResponse * soap_new_set_ns1__LatLonListSquareResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListSquareResponse *_p = soap_instantiate_ns1__LatLonListSquareResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSquareResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline void soap_delete_ns1__LatLonListSquareResponse(struct soap *soap, struct ns1__LatLonListSquareResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListSquareResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListZipCode
#define SOAP_TYPE_ns1__LatLonListZipCode (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListZipCode(struct soap*, struct ns1__LatLonListZipCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListZipCode(struct soap*, const struct ns1__LatLonListZipCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListZipCode(struct soap*, const char*, int, const struct ns1__LatLonListZipCode *, const char*);
SOAP_FMAC3 struct ns1__LatLonListZipCode * SOAP_FMAC4 soap_in_ns1__LatLonListZipCode(struct soap*, const char*, struct ns1__LatLonListZipCode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListZipCode(struct soap*, const struct ns1__LatLonListZipCode *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListZipCode
#define soap_write_ns1__LatLonListZipCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListZipCode(soap, data),0) || soap_put_ns1__LatLonListZipCode(soap, data, "ns1:LatLonListZipCode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListZipCode * SOAP_FMAC4 soap_get_ns1__LatLonListZipCode(struct soap*, struct ns1__LatLonListZipCode *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListZipCode
#define soap_read_ns1__LatLonListZipCode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListZipCode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListZipCode * SOAP_FMAC2 soap_instantiate_ns1__LatLonListZipCode(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListZipCode * soap_new_ns1__LatLonListZipCode(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListZipCode(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListZipCode * soap_new_req_ns1__LatLonListZipCode(struct soap *soap, std::string& zipCodeList) { struct ns1__LatLonListZipCode *_p = soap_instantiate_ns1__LatLonListZipCode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListZipCode(soap, _p); _p->zipCodeList = zipCodeList; } return _p; }

inline struct ns1__LatLonListZipCode * soap_new_set_ns1__LatLonListZipCode(struct soap *soap, std::string& zipCodeList) { struct ns1__LatLonListZipCode *_p = soap_instantiate_ns1__LatLonListZipCode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListZipCode(soap, _p); _p->zipCodeList = zipCodeList; } return _p; }

inline void soap_delete_ns1__LatLonListZipCode(struct soap *soap, struct ns1__LatLonListZipCode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListZipCode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListZipCodeResponse
#define SOAP_TYPE_ns1__LatLonListZipCodeResponse (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListZipCodeResponse(struct soap*, struct ns1__LatLonListZipCodeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListZipCodeResponse(struct soap*, const struct ns1__LatLonListZipCodeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListZipCodeResponse(struct soap*, const char*, int, const struct ns1__LatLonListZipCodeResponse *, const char*);
SOAP_FMAC3 struct ns1__LatLonListZipCodeResponse * SOAP_FMAC4 soap_in_ns1__LatLonListZipCodeResponse(struct soap*, const char*, struct ns1__LatLonListZipCodeResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListZipCodeResponse(struct soap*, const struct ns1__LatLonListZipCodeResponse *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListZipCodeResponse
#define soap_write_ns1__LatLonListZipCodeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListZipCodeResponse(soap, data),0) || soap_put_ns1__LatLonListZipCodeResponse(soap, data, "ns1:LatLonListZipCodeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListZipCodeResponse * SOAP_FMAC4 soap_get_ns1__LatLonListZipCodeResponse(struct soap*, struct ns1__LatLonListZipCodeResponse *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListZipCodeResponse
#define soap_read_ns1__LatLonListZipCodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListZipCodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListZipCodeResponse * SOAP_FMAC2 soap_instantiate_ns1__LatLonListZipCodeResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListZipCodeResponse * soap_new_ns1__LatLonListZipCodeResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListZipCodeResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListZipCodeResponse * soap_new_req_ns1__LatLonListZipCodeResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListZipCodeResponse *_p = soap_instantiate_ns1__LatLonListZipCodeResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListZipCodeResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline struct ns1__LatLonListZipCodeResponse * soap_new_set_ns1__LatLonListZipCodeResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListZipCodeResponse *_p = soap_instantiate_ns1__LatLonListZipCodeResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListZipCodeResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline void soap_delete_ns1__LatLonListZipCodeResponse(struct soap *soap, struct ns1__LatLonListZipCodeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListZipCodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListLine
#define SOAP_TYPE_ns1__LatLonListLine (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListLine(struct soap*, struct ns1__LatLonListLine *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListLine(struct soap*, const struct ns1__LatLonListLine *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListLine(struct soap*, const char*, int, const struct ns1__LatLonListLine *, const char*);
SOAP_FMAC3 struct ns1__LatLonListLine * SOAP_FMAC4 soap_in_ns1__LatLonListLine(struct soap*, const char*, struct ns1__LatLonListLine *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListLine(struct soap*, const struct ns1__LatLonListLine *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListLine
#define soap_write_ns1__LatLonListLine(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListLine(soap, data),0) || soap_put_ns1__LatLonListLine(soap, data, "ns1:LatLonListLine", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListLine * SOAP_FMAC4 soap_get_ns1__LatLonListLine(struct soap*, struct ns1__LatLonListLine *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListLine
#define soap_read_ns1__LatLonListLine(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListLine(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListLine * SOAP_FMAC2 soap_instantiate_ns1__LatLonListLine(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListLine * soap_new_ns1__LatLonListLine(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListLine(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListLine * soap_new_req_ns1__LatLonListLine(struct soap *soap, std::string& endPoint1Lat, std::string& endPoint1Lon, std::string& endPoint2Lat, std::string& endPoint2Lon) { struct ns1__LatLonListLine *_p = soap_instantiate_ns1__LatLonListLine(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListLine(soap, _p); _p->endPoint1Lat = endPoint1Lat; _p->endPoint1Lon = endPoint1Lon; _p->endPoint2Lat = endPoint2Lat; _p->endPoint2Lon = endPoint2Lon; } return _p; }

inline struct ns1__LatLonListLine * soap_new_set_ns1__LatLonListLine(struct soap *soap, std::string& endPoint1Lat, std::string& endPoint1Lon, std::string& endPoint2Lat, std::string& endPoint2Lon) { struct ns1__LatLonListLine *_p = soap_instantiate_ns1__LatLonListLine(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListLine(soap, _p); _p->endPoint1Lat = endPoint1Lat; _p->endPoint1Lon = endPoint1Lon; _p->endPoint2Lat = endPoint2Lat; _p->endPoint2Lon = endPoint2Lon; } return _p; }

inline void soap_delete_ns1__LatLonListLine(struct soap *soap, struct ns1__LatLonListLine *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListLine(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListLineResponse
#define SOAP_TYPE_ns1__LatLonListLineResponse (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListLineResponse(struct soap*, struct ns1__LatLonListLineResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListLineResponse(struct soap*, const struct ns1__LatLonListLineResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListLineResponse(struct soap*, const char*, int, const struct ns1__LatLonListLineResponse *, const char*);
SOAP_FMAC3 struct ns1__LatLonListLineResponse * SOAP_FMAC4 soap_in_ns1__LatLonListLineResponse(struct soap*, const char*, struct ns1__LatLonListLineResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListLineResponse(struct soap*, const struct ns1__LatLonListLineResponse *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListLineResponse
#define soap_write_ns1__LatLonListLineResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListLineResponse(soap, data),0) || soap_put_ns1__LatLonListLineResponse(soap, data, "ns1:LatLonListLineResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListLineResponse * SOAP_FMAC4 soap_get_ns1__LatLonListLineResponse(struct soap*, struct ns1__LatLonListLineResponse *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListLineResponse
#define soap_read_ns1__LatLonListLineResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListLineResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListLineResponse * SOAP_FMAC2 soap_instantiate_ns1__LatLonListLineResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListLineResponse * soap_new_ns1__LatLonListLineResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListLineResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListLineResponse * soap_new_req_ns1__LatLonListLineResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListLineResponse *_p = soap_instantiate_ns1__LatLonListLineResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListLineResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline struct ns1__LatLonListLineResponse * soap_new_set_ns1__LatLonListLineResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListLineResponse *_p = soap_instantiate_ns1__LatLonListLineResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListLineResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline void soap_delete_ns1__LatLonListLineResponse(struct soap *soap, struct ns1__LatLonListLineResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListLineResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListSubgrid
#define SOAP_TYPE_ns1__LatLonListSubgrid (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListSubgrid(struct soap*, struct ns1__LatLonListSubgrid *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListSubgrid(struct soap*, const struct ns1__LatLonListSubgrid *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListSubgrid(struct soap*, const char*, int, const struct ns1__LatLonListSubgrid *, const char*);
SOAP_FMAC3 struct ns1__LatLonListSubgrid * SOAP_FMAC4 soap_in_ns1__LatLonListSubgrid(struct soap*, const char*, struct ns1__LatLonListSubgrid *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListSubgrid(struct soap*, const struct ns1__LatLonListSubgrid *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListSubgrid
#define soap_write_ns1__LatLonListSubgrid(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListSubgrid(soap, data),0) || soap_put_ns1__LatLonListSubgrid(soap, data, "ns1:LatLonListSubgrid", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListSubgrid * SOAP_FMAC4 soap_get_ns1__LatLonListSubgrid(struct soap*, struct ns1__LatLonListSubgrid *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListSubgrid
#define soap_read_ns1__LatLonListSubgrid(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListSubgrid(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListSubgrid * SOAP_FMAC2 soap_instantiate_ns1__LatLonListSubgrid(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListSubgrid * soap_new_ns1__LatLonListSubgrid(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListSubgrid(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListSubgrid * soap_new_req_ns1__LatLonListSubgrid(struct soap *soap, std::string& lowerLeftLatitude, std::string& lowerLeftLongitude, std::string& upperRightLatitude, std::string& upperRightLongitude, std::string& resolution) { struct ns1__LatLonListSubgrid *_p = soap_instantiate_ns1__LatLonListSubgrid(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSubgrid(soap, _p); _p->lowerLeftLatitude = lowerLeftLatitude; _p->lowerLeftLongitude = lowerLeftLongitude; _p->upperRightLatitude = upperRightLatitude; _p->upperRightLongitude = upperRightLongitude; _p->resolution = resolution; } return _p; }

inline struct ns1__LatLonListSubgrid * soap_new_set_ns1__LatLonListSubgrid(struct soap *soap, std::string& lowerLeftLatitude, std::string& lowerLeftLongitude, std::string& upperRightLatitude, std::string& upperRightLongitude, std::string& resolution) { struct ns1__LatLonListSubgrid *_p = soap_instantiate_ns1__LatLonListSubgrid(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSubgrid(soap, _p); _p->lowerLeftLatitude = lowerLeftLatitude; _p->lowerLeftLongitude = lowerLeftLongitude; _p->upperRightLatitude = upperRightLatitude; _p->upperRightLongitude = upperRightLongitude; _p->resolution = resolution; } return _p; }

inline void soap_delete_ns1__LatLonListSubgrid(struct soap *soap, struct ns1__LatLonListSubgrid *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListSubgrid(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LatLonListSubgridResponse
#define SOAP_TYPE_ns1__LatLonListSubgridResponse (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__LatLonListSubgridResponse(struct soap*, struct ns1__LatLonListSubgridResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__LatLonListSubgridResponse(struct soap*, const struct ns1__LatLonListSubgridResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LatLonListSubgridResponse(struct soap*, const char*, int, const struct ns1__LatLonListSubgridResponse *, const char*);
SOAP_FMAC3 struct ns1__LatLonListSubgridResponse * SOAP_FMAC4 soap_in_ns1__LatLonListSubgridResponse(struct soap*, const char*, struct ns1__LatLonListSubgridResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__LatLonListSubgridResponse(struct soap*, const struct ns1__LatLonListSubgridResponse *, const char*, const char*);

#ifndef soap_write_ns1__LatLonListSubgridResponse
#define soap_write_ns1__LatLonListSubgridResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__LatLonListSubgridResponse(soap, data),0) || soap_put_ns1__LatLonListSubgridResponse(soap, data, "ns1:LatLonListSubgridResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__LatLonListSubgridResponse * SOAP_FMAC4 soap_get_ns1__LatLonListSubgridResponse(struct soap*, struct ns1__LatLonListSubgridResponse *, const char*, const char*);

#ifndef soap_read_ns1__LatLonListSubgridResponse
#define soap_read_ns1__LatLonListSubgridResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LatLonListSubgridResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__LatLonListSubgridResponse * SOAP_FMAC2 soap_instantiate_ns1__LatLonListSubgridResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__LatLonListSubgridResponse * soap_new_ns1__LatLonListSubgridResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LatLonListSubgridResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__LatLonListSubgridResponse * soap_new_req_ns1__LatLonListSubgridResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListSubgridResponse *_p = soap_instantiate_ns1__LatLonListSubgridResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSubgridResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline struct ns1__LatLonListSubgridResponse * soap_new_set_ns1__LatLonListSubgridResponse(struct soap *soap, std::string& listLatLonOut) { struct ns1__LatLonListSubgridResponse *_p = soap_instantiate_ns1__LatLonListSubgridResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__LatLonListSubgridResponse(soap, _p); _p->listLatLonOut = listLatLonOut; } return _p; }

inline void soap_delete_ns1__LatLonListSubgridResponse(struct soap *soap, struct ns1__LatLonListSubgridResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LatLonListSubgridResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GmlTimeSeries
#define SOAP_TYPE_ns1__GmlTimeSeries (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GmlTimeSeries(struct soap*, struct ns1__GmlTimeSeries *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GmlTimeSeries(struct soap*, const struct ns1__GmlTimeSeries *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GmlTimeSeries(struct soap*, const char*, int, const struct ns1__GmlTimeSeries *, const char*);
SOAP_FMAC3 struct ns1__GmlTimeSeries * SOAP_FMAC4 soap_in_ns1__GmlTimeSeries(struct soap*, const char*, struct ns1__GmlTimeSeries *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GmlTimeSeries(struct soap*, const struct ns1__GmlTimeSeries *, const char*, const char*);

#ifndef soap_write_ns1__GmlTimeSeries
#define soap_write_ns1__GmlTimeSeries(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__GmlTimeSeries(soap, data),0) || soap_put_ns1__GmlTimeSeries(soap, data, "ns1:GmlTimeSeries", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__GmlTimeSeries * SOAP_FMAC4 soap_get_ns1__GmlTimeSeries(struct soap*, struct ns1__GmlTimeSeries *, const char*, const char*);

#ifndef soap_read_ns1__GmlTimeSeries
#define soap_read_ns1__GmlTimeSeries(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GmlTimeSeries(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__GmlTimeSeries * SOAP_FMAC2 soap_instantiate_ns1__GmlTimeSeries(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__GmlTimeSeries * soap_new_ns1__GmlTimeSeries(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GmlTimeSeries(soap, n, NULL, NULL, NULL); }

inline struct ns1__GmlTimeSeries * soap_new_req_ns1__GmlTimeSeries(struct soap *soap, std::string& listLatLon, time_t startTime, time_t endTime, enum ns2__compTypeType compType, enum ns2__featureTypeType featureType, std::string& propertyName) { struct ns1__GmlTimeSeries *_p = soap_instantiate_ns1__GmlTimeSeries(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlTimeSeries(soap, _p); _p->listLatLon = listLatLon; _p->startTime = startTime; _p->endTime = endTime; _p->compType = compType; _p->featureType = featureType; _p->propertyName = propertyName; } return _p; }

inline struct ns1__GmlTimeSeries * soap_new_set_ns1__GmlTimeSeries(struct soap *soap, std::string& listLatLon, time_t startTime, time_t endTime, enum ns2__compTypeType compType, enum ns2__featureTypeType featureType, std::string& propertyName) { struct ns1__GmlTimeSeries *_p = soap_instantiate_ns1__GmlTimeSeries(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlTimeSeries(soap, _p); _p->listLatLon = listLatLon; _p->startTime = startTime; _p->endTime = endTime; _p->compType = compType; _p->featureType = featureType; _p->propertyName = propertyName; } return _p; }

inline void soap_delete_ns1__GmlTimeSeries(struct soap *soap, struct ns1__GmlTimeSeries *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GmlTimeSeries(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GmlTimeSeriesResponse
#define SOAP_TYPE_ns1__GmlTimeSeriesResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GmlTimeSeriesResponse(struct soap*, struct ns1__GmlTimeSeriesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GmlTimeSeriesResponse(struct soap*, const struct ns1__GmlTimeSeriesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GmlTimeSeriesResponse(struct soap*, const char*, int, const struct ns1__GmlTimeSeriesResponse *, const char*);
SOAP_FMAC3 struct ns1__GmlTimeSeriesResponse * SOAP_FMAC4 soap_in_ns1__GmlTimeSeriesResponse(struct soap*, const char*, struct ns1__GmlTimeSeriesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GmlTimeSeriesResponse(struct soap*, const struct ns1__GmlTimeSeriesResponse *, const char*, const char*);

#ifndef soap_write_ns1__GmlTimeSeriesResponse
#define soap_write_ns1__GmlTimeSeriesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__GmlTimeSeriesResponse(soap, data),0) || soap_put_ns1__GmlTimeSeriesResponse(soap, data, "ns1:GmlTimeSeriesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__GmlTimeSeriesResponse * SOAP_FMAC4 soap_get_ns1__GmlTimeSeriesResponse(struct soap*, struct ns1__GmlTimeSeriesResponse *, const char*, const char*);

#ifndef soap_read_ns1__GmlTimeSeriesResponse
#define soap_read_ns1__GmlTimeSeriesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GmlTimeSeriesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__GmlTimeSeriesResponse * SOAP_FMAC2 soap_instantiate_ns1__GmlTimeSeriesResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__GmlTimeSeriesResponse * soap_new_ns1__GmlTimeSeriesResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GmlTimeSeriesResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__GmlTimeSeriesResponse * soap_new_req_ns1__GmlTimeSeriesResponse(struct soap *soap, std::string& dwGmlOut) { struct ns1__GmlTimeSeriesResponse *_p = soap_instantiate_ns1__GmlTimeSeriesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlTimeSeriesResponse(soap, _p); _p->dwGmlOut = dwGmlOut; } return _p; }

inline struct ns1__GmlTimeSeriesResponse * soap_new_set_ns1__GmlTimeSeriesResponse(struct soap *soap, std::string& dwGmlOut) { struct ns1__GmlTimeSeriesResponse *_p = soap_instantiate_ns1__GmlTimeSeriesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlTimeSeriesResponse(soap, _p); _p->dwGmlOut = dwGmlOut; } return _p; }

inline void soap_delete_ns1__GmlTimeSeriesResponse(struct soap *soap, struct ns1__GmlTimeSeriesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GmlTimeSeriesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GmlLatLonList
#define SOAP_TYPE_ns1__GmlLatLonList (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GmlLatLonList(struct soap*, struct ns1__GmlLatLonList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GmlLatLonList(struct soap*, const struct ns1__GmlLatLonList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GmlLatLonList(struct soap*, const char*, int, const struct ns1__GmlLatLonList *, const char*);
SOAP_FMAC3 struct ns1__GmlLatLonList * SOAP_FMAC4 soap_in_ns1__GmlLatLonList(struct soap*, const char*, struct ns1__GmlLatLonList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GmlLatLonList(struct soap*, const struct ns1__GmlLatLonList *, const char*, const char*);

#ifndef soap_write_ns1__GmlLatLonList
#define soap_write_ns1__GmlLatLonList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__GmlLatLonList(soap, data),0) || soap_put_ns1__GmlLatLonList(soap, data, "ns1:GmlLatLonList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__GmlLatLonList * SOAP_FMAC4 soap_get_ns1__GmlLatLonList(struct soap*, struct ns1__GmlLatLonList *, const char*, const char*);

#ifndef soap_read_ns1__GmlLatLonList
#define soap_read_ns1__GmlLatLonList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GmlLatLonList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__GmlLatLonList * SOAP_FMAC2 soap_instantiate_ns1__GmlLatLonList(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__GmlLatLonList * soap_new_ns1__GmlLatLonList(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GmlLatLonList(soap, n, NULL, NULL, NULL); }

inline struct ns1__GmlLatLonList * soap_new_req_ns1__GmlLatLonList(struct soap *soap, std::string& listLatLon, time_t requestedTime, enum ns2__featureTypeType featureType) { struct ns1__GmlLatLonList *_p = soap_instantiate_ns1__GmlLatLonList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlLatLonList(soap, _p); _p->listLatLon = listLatLon; _p->requestedTime = requestedTime; _p->featureType = featureType; } return _p; }

inline struct ns1__GmlLatLonList * soap_new_set_ns1__GmlLatLonList(struct soap *soap, std::string& listLatLon, time_t requestedTime, enum ns2__featureTypeType featureType, ns2__weatherParametersType *weatherParameters) { struct ns1__GmlLatLonList *_p = soap_instantiate_ns1__GmlLatLonList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlLatLonList(soap, _p); _p->listLatLon = listLatLon; _p->requestedTime = requestedTime; _p->featureType = featureType; _p->weatherParameters = weatherParameters; } return _p; }

inline void soap_delete_ns1__GmlLatLonList(struct soap *soap, struct ns1__GmlLatLonList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GmlLatLonList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GmlLatLonListResponse
#define SOAP_TYPE_ns1__GmlLatLonListResponse (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GmlLatLonListResponse(struct soap*, struct ns1__GmlLatLonListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GmlLatLonListResponse(struct soap*, const struct ns1__GmlLatLonListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GmlLatLonListResponse(struct soap*, const char*, int, const struct ns1__GmlLatLonListResponse *, const char*);
SOAP_FMAC3 struct ns1__GmlLatLonListResponse * SOAP_FMAC4 soap_in_ns1__GmlLatLonListResponse(struct soap*, const char*, struct ns1__GmlLatLonListResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GmlLatLonListResponse(struct soap*, const struct ns1__GmlLatLonListResponse *, const char*, const char*);

#ifndef soap_write_ns1__GmlLatLonListResponse
#define soap_write_ns1__GmlLatLonListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__GmlLatLonListResponse(soap, data),0) || soap_put_ns1__GmlLatLonListResponse(soap, data, "ns1:GmlLatLonListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__GmlLatLonListResponse * SOAP_FMAC4 soap_get_ns1__GmlLatLonListResponse(struct soap*, struct ns1__GmlLatLonListResponse *, const char*, const char*);

#ifndef soap_read_ns1__GmlLatLonListResponse
#define soap_read_ns1__GmlLatLonListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GmlLatLonListResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__GmlLatLonListResponse * SOAP_FMAC2 soap_instantiate_ns1__GmlLatLonListResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__GmlLatLonListResponse * soap_new_ns1__GmlLatLonListResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GmlLatLonListResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__GmlLatLonListResponse * soap_new_req_ns1__GmlLatLonListResponse(struct soap *soap, std::string& dwGmlOut) { struct ns1__GmlLatLonListResponse *_p = soap_instantiate_ns1__GmlLatLonListResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlLatLonListResponse(soap, _p); _p->dwGmlOut = dwGmlOut; } return _p; }

inline struct ns1__GmlLatLonListResponse * soap_new_set_ns1__GmlLatLonListResponse(struct soap *soap, std::string& dwGmlOut) { struct ns1__GmlLatLonListResponse *_p = soap_instantiate_ns1__GmlLatLonListResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__GmlLatLonListResponse(soap, _p); _p->dwGmlOut = dwGmlOut; } return _p; }

inline void soap_delete_ns1__GmlLatLonListResponse(struct soap *soap, struct ns1__GmlLatLonListResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GmlLatLonListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenByDayLatLonList
#define SOAP_TYPE_ns1__NDFDgenByDayLatLonList (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenByDayLatLonList(struct soap*, struct ns1__NDFDgenByDayLatLonList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenByDayLatLonList(struct soap*, const struct ns1__NDFDgenByDayLatLonList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenByDayLatLonList(struct soap*, const char*, int, const struct ns1__NDFDgenByDayLatLonList *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenByDayLatLonList * SOAP_FMAC4 soap_in_ns1__NDFDgenByDayLatLonList(struct soap*, const char*, struct ns1__NDFDgenByDayLatLonList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenByDayLatLonList(struct soap*, const struct ns1__NDFDgenByDayLatLonList *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenByDayLatLonList
#define soap_write_ns1__NDFDgenByDayLatLonList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenByDayLatLonList(soap, data),0) || soap_put_ns1__NDFDgenByDayLatLonList(soap, data, "ns1:NDFDgenByDayLatLonList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenByDayLatLonList * SOAP_FMAC4 soap_get_ns1__NDFDgenByDayLatLonList(struct soap*, struct ns1__NDFDgenByDayLatLonList *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenByDayLatLonList
#define soap_read_ns1__NDFDgenByDayLatLonList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenByDayLatLonList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenByDayLatLonList * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenByDayLatLonList(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenByDayLatLonList * soap_new_ns1__NDFDgenByDayLatLonList(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenByDayLatLonList(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenByDayLatLonList * soap_new_req_ns1__NDFDgenByDayLatLonList(struct soap *soap, std::string& listLatLon, std::string& startDate, std::string& numDays, enum ns2__unitType Unit, enum ns2__formatType format) { struct ns1__NDFDgenByDayLatLonList *_p = soap_instantiate_ns1__NDFDgenByDayLatLonList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDayLatLonList(soap, _p); _p->listLatLon = listLatLon; _p->startDate = startDate; _p->numDays = numDays; _p->Unit = Unit; _p->format = format; } return _p; }

inline struct ns1__NDFDgenByDayLatLonList * soap_new_set_ns1__NDFDgenByDayLatLonList(struct soap *soap, std::string& listLatLon, std::string& startDate, std::string& numDays, enum ns2__unitType Unit, enum ns2__formatType format) { struct ns1__NDFDgenByDayLatLonList *_p = soap_instantiate_ns1__NDFDgenByDayLatLonList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDayLatLonList(soap, _p); _p->listLatLon = listLatLon; _p->startDate = startDate; _p->numDays = numDays; _p->Unit = Unit; _p->format = format; } return _p; }

inline void soap_delete_ns1__NDFDgenByDayLatLonList(struct soap *soap, struct ns1__NDFDgenByDayLatLonList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenByDayLatLonList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenByDayLatLonListResponse
#define SOAP_TYPE_ns1__NDFDgenByDayLatLonListResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenByDayLatLonListResponse(struct soap*, struct ns1__NDFDgenByDayLatLonListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenByDayLatLonListResponse(struct soap*, const struct ns1__NDFDgenByDayLatLonListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenByDayLatLonListResponse(struct soap*, const char*, int, const struct ns1__NDFDgenByDayLatLonListResponse *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenByDayLatLonListResponse * SOAP_FMAC4 soap_in_ns1__NDFDgenByDayLatLonListResponse(struct soap*, const char*, struct ns1__NDFDgenByDayLatLonListResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenByDayLatLonListResponse(struct soap*, const struct ns1__NDFDgenByDayLatLonListResponse *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenByDayLatLonListResponse
#define soap_write_ns1__NDFDgenByDayLatLonListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenByDayLatLonListResponse(soap, data),0) || soap_put_ns1__NDFDgenByDayLatLonListResponse(soap, data, "ns1:NDFDgenByDayLatLonListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenByDayLatLonListResponse * SOAP_FMAC4 soap_get_ns1__NDFDgenByDayLatLonListResponse(struct soap*, struct ns1__NDFDgenByDayLatLonListResponse *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenByDayLatLonListResponse
#define soap_read_ns1__NDFDgenByDayLatLonListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenByDayLatLonListResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenByDayLatLonListResponse * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenByDayLatLonListResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenByDayLatLonListResponse * soap_new_ns1__NDFDgenByDayLatLonListResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenByDayLatLonListResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenByDayLatLonListResponse * soap_new_req_ns1__NDFDgenByDayLatLonListResponse(struct soap *soap, std::string& dwmlByDayOut) { struct ns1__NDFDgenByDayLatLonListResponse *_p = soap_instantiate_ns1__NDFDgenByDayLatLonListResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDayLatLonListResponse(soap, _p); _p->dwmlByDayOut = dwmlByDayOut; } return _p; }

inline struct ns1__NDFDgenByDayLatLonListResponse * soap_new_set_ns1__NDFDgenByDayLatLonListResponse(struct soap *soap, std::string& dwmlByDayOut) { struct ns1__NDFDgenByDayLatLonListResponse *_p = soap_instantiate_ns1__NDFDgenByDayLatLonListResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDayLatLonListResponse(soap, _p); _p->dwmlByDayOut = dwmlByDayOut; } return _p; }

inline void soap_delete_ns1__NDFDgenByDayLatLonListResponse(struct soap *soap, struct ns1__NDFDgenByDayLatLonListResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenByDayLatLonListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenLatLonList
#define SOAP_TYPE_ns1__NDFDgenLatLonList (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenLatLonList(struct soap*, struct ns1__NDFDgenLatLonList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenLatLonList(struct soap*, const struct ns1__NDFDgenLatLonList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenLatLonList(struct soap*, const char*, int, const struct ns1__NDFDgenLatLonList *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenLatLonList * SOAP_FMAC4 soap_in_ns1__NDFDgenLatLonList(struct soap*, const char*, struct ns1__NDFDgenLatLonList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenLatLonList(struct soap*, const struct ns1__NDFDgenLatLonList *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenLatLonList
#define soap_write_ns1__NDFDgenLatLonList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenLatLonList(soap, data),0) || soap_put_ns1__NDFDgenLatLonList(soap, data, "ns1:NDFDgenLatLonList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenLatLonList * SOAP_FMAC4 soap_get_ns1__NDFDgenLatLonList(struct soap*, struct ns1__NDFDgenLatLonList *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenLatLonList
#define soap_read_ns1__NDFDgenLatLonList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenLatLonList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenLatLonList * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenLatLonList(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenLatLonList * soap_new_ns1__NDFDgenLatLonList(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenLatLonList(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenLatLonList * soap_new_req_ns1__NDFDgenLatLonList(struct soap *soap, std::string& listLatLon, enum ns2__productType product, time_t startTime, time_t endTime, enum ns2__unitType Unit) { struct ns1__NDFDgenLatLonList *_p = soap_instantiate_ns1__NDFDgenLatLonList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenLatLonList(soap, _p); _p->listLatLon = listLatLon; _p->product = product; _p->startTime = startTime; _p->endTime = endTime; _p->Unit = Unit; } return _p; }

inline struct ns1__NDFDgenLatLonList * soap_new_set_ns1__NDFDgenLatLonList(struct soap *soap, std::string& listLatLon, enum ns2__productType product, time_t startTime, time_t endTime, enum ns2__unitType Unit, ns2__weatherParametersType *weatherParameters) { struct ns1__NDFDgenLatLonList *_p = soap_instantiate_ns1__NDFDgenLatLonList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenLatLonList(soap, _p); _p->listLatLon = listLatLon; _p->product = product; _p->startTime = startTime; _p->endTime = endTime; _p->Unit = Unit; _p->weatherParameters = weatherParameters; } return _p; }

inline void soap_delete_ns1__NDFDgenLatLonList(struct soap *soap, struct ns1__NDFDgenLatLonList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenLatLonList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenLatLonListResponse
#define SOAP_TYPE_ns1__NDFDgenLatLonListResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenLatLonListResponse(struct soap*, struct ns1__NDFDgenLatLonListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenLatLonListResponse(struct soap*, const struct ns1__NDFDgenLatLonListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenLatLonListResponse(struct soap*, const char*, int, const struct ns1__NDFDgenLatLonListResponse *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenLatLonListResponse * SOAP_FMAC4 soap_in_ns1__NDFDgenLatLonListResponse(struct soap*, const char*, struct ns1__NDFDgenLatLonListResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenLatLonListResponse(struct soap*, const struct ns1__NDFDgenLatLonListResponse *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenLatLonListResponse
#define soap_write_ns1__NDFDgenLatLonListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenLatLonListResponse(soap, data),0) || soap_put_ns1__NDFDgenLatLonListResponse(soap, data, "ns1:NDFDgenLatLonListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenLatLonListResponse * SOAP_FMAC4 soap_get_ns1__NDFDgenLatLonListResponse(struct soap*, struct ns1__NDFDgenLatLonListResponse *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenLatLonListResponse
#define soap_read_ns1__NDFDgenLatLonListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenLatLonListResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenLatLonListResponse * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenLatLonListResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenLatLonListResponse * soap_new_ns1__NDFDgenLatLonListResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenLatLonListResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenLatLonListResponse * soap_new_req_ns1__NDFDgenLatLonListResponse(struct soap *soap, std::string& dwmlOut) { struct ns1__NDFDgenLatLonListResponse *_p = soap_instantiate_ns1__NDFDgenLatLonListResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenLatLonListResponse(soap, _p); _p->dwmlOut = dwmlOut; } return _p; }

inline struct ns1__NDFDgenLatLonListResponse * soap_new_set_ns1__NDFDgenLatLonListResponse(struct soap *soap, std::string& dwmlOut) { struct ns1__NDFDgenLatLonListResponse *_p = soap_instantiate_ns1__NDFDgenLatLonListResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenLatLonListResponse(soap, _p); _p->dwmlOut = dwmlOut; } return _p; }

inline void soap_delete_ns1__NDFDgenLatLonListResponse(struct soap *soap, struct ns1__NDFDgenLatLonListResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenLatLonListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenByDay
#define SOAP_TYPE_ns1__NDFDgenByDay (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenByDay(struct soap*, struct ns1__NDFDgenByDay *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenByDay(struct soap*, const struct ns1__NDFDgenByDay *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenByDay(struct soap*, const char*, int, const struct ns1__NDFDgenByDay *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenByDay * SOAP_FMAC4 soap_in_ns1__NDFDgenByDay(struct soap*, const char*, struct ns1__NDFDgenByDay *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenByDay(struct soap*, const struct ns1__NDFDgenByDay *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenByDay
#define soap_write_ns1__NDFDgenByDay(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenByDay(soap, data),0) || soap_put_ns1__NDFDgenByDay(soap, data, "ns1:NDFDgenByDay", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenByDay * SOAP_FMAC4 soap_get_ns1__NDFDgenByDay(struct soap*, struct ns1__NDFDgenByDay *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenByDay
#define soap_read_ns1__NDFDgenByDay(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenByDay(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenByDay * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenByDay(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenByDay * soap_new_ns1__NDFDgenByDay(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenByDay(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenByDay * soap_new_req_ns1__NDFDgenByDay(struct soap *soap, std::string& latitude, std::string& longitude, std::string& startDate, std::string& numDays, enum ns2__unitType Unit, enum ns2__formatType format) { struct ns1__NDFDgenByDay *_p = soap_instantiate_ns1__NDFDgenByDay(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDay(soap, _p); _p->latitude = latitude; _p->longitude = longitude; _p->startDate = startDate; _p->numDays = numDays; _p->Unit = Unit; _p->format = format; } return _p; }

inline struct ns1__NDFDgenByDay * soap_new_set_ns1__NDFDgenByDay(struct soap *soap, std::string& latitude, std::string& longitude, std::string& startDate, std::string& numDays, enum ns2__unitType Unit, enum ns2__formatType format) { struct ns1__NDFDgenByDay *_p = soap_instantiate_ns1__NDFDgenByDay(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDay(soap, _p); _p->latitude = latitude; _p->longitude = longitude; _p->startDate = startDate; _p->numDays = numDays; _p->Unit = Unit; _p->format = format; } return _p; }

inline void soap_delete_ns1__NDFDgenByDay(struct soap *soap, struct ns1__NDFDgenByDay *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenByDay(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenByDayResponse
#define SOAP_TYPE_ns1__NDFDgenByDayResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenByDayResponse(struct soap*, struct ns1__NDFDgenByDayResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenByDayResponse(struct soap*, const struct ns1__NDFDgenByDayResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenByDayResponse(struct soap*, const char*, int, const struct ns1__NDFDgenByDayResponse *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenByDayResponse * SOAP_FMAC4 soap_in_ns1__NDFDgenByDayResponse(struct soap*, const char*, struct ns1__NDFDgenByDayResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenByDayResponse(struct soap*, const struct ns1__NDFDgenByDayResponse *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenByDayResponse
#define soap_write_ns1__NDFDgenByDayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenByDayResponse(soap, data),0) || soap_put_ns1__NDFDgenByDayResponse(soap, data, "ns1:NDFDgenByDayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenByDayResponse * SOAP_FMAC4 soap_get_ns1__NDFDgenByDayResponse(struct soap*, struct ns1__NDFDgenByDayResponse *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenByDayResponse
#define soap_read_ns1__NDFDgenByDayResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenByDayResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenByDayResponse * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenByDayResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenByDayResponse * soap_new_ns1__NDFDgenByDayResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenByDayResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenByDayResponse * soap_new_req_ns1__NDFDgenByDayResponse(struct soap *soap, std::string& dwmlByDayOut) { struct ns1__NDFDgenByDayResponse *_p = soap_instantiate_ns1__NDFDgenByDayResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDayResponse(soap, _p); _p->dwmlByDayOut = dwmlByDayOut; } return _p; }

inline struct ns1__NDFDgenByDayResponse * soap_new_set_ns1__NDFDgenByDayResponse(struct soap *soap, std::string& dwmlByDayOut) { struct ns1__NDFDgenByDayResponse *_p = soap_instantiate_ns1__NDFDgenByDayResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenByDayResponse(soap, _p); _p->dwmlByDayOut = dwmlByDayOut; } return _p; }

inline void soap_delete_ns1__NDFDgenByDayResponse(struct soap *soap, struct ns1__NDFDgenByDayResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenByDayResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgen
#define SOAP_TYPE_ns1__NDFDgen (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgen(struct soap*, struct ns1__NDFDgen *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgen(struct soap*, const struct ns1__NDFDgen *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgen(struct soap*, const char*, int, const struct ns1__NDFDgen *, const char*);
SOAP_FMAC3 struct ns1__NDFDgen * SOAP_FMAC4 soap_in_ns1__NDFDgen(struct soap*, const char*, struct ns1__NDFDgen *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgen(struct soap*, const struct ns1__NDFDgen *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgen
#define soap_write_ns1__NDFDgen(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgen(soap, data),0) || soap_put_ns1__NDFDgen(soap, data, "ns1:NDFDgen", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgen * SOAP_FMAC4 soap_get_ns1__NDFDgen(struct soap*, struct ns1__NDFDgen *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgen
#define soap_read_ns1__NDFDgen(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgen(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgen * SOAP_FMAC2 soap_instantiate_ns1__NDFDgen(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgen * soap_new_ns1__NDFDgen(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgen(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgen * soap_new_req_ns1__NDFDgen(struct soap *soap, std::string& latitude, std::string& longitude, enum ns2__productType product, time_t startTime, time_t endTime, enum ns2__unitType Unit) { struct ns1__NDFDgen *_p = soap_instantiate_ns1__NDFDgen(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgen(soap, _p); _p->latitude = latitude; _p->longitude = longitude; _p->product = product; _p->startTime = startTime; _p->endTime = endTime; _p->Unit = Unit; } return _p; }

inline struct ns1__NDFDgen * soap_new_set_ns1__NDFDgen(struct soap *soap, std::string& latitude, std::string& longitude, enum ns2__productType product, time_t startTime, time_t endTime, enum ns2__unitType Unit, ns2__weatherParametersType *weatherParameters) { struct ns1__NDFDgen *_p = soap_instantiate_ns1__NDFDgen(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgen(soap, _p); _p->latitude = latitude; _p->longitude = longitude; _p->product = product; _p->startTime = startTime; _p->endTime = endTime; _p->Unit = Unit; _p->weatherParameters = weatherParameters; } return _p; }

inline void soap_delete_ns1__NDFDgen(struct soap *soap, struct ns1__NDFDgen *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__NDFDgenResponse
#define SOAP_TYPE_ns1__NDFDgenResponse (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__NDFDgenResponse(struct soap*, struct ns1__NDFDgenResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__NDFDgenResponse(struct soap*, const struct ns1__NDFDgenResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__NDFDgenResponse(struct soap*, const char*, int, const struct ns1__NDFDgenResponse *, const char*);
SOAP_FMAC3 struct ns1__NDFDgenResponse * SOAP_FMAC4 soap_in_ns1__NDFDgenResponse(struct soap*, const char*, struct ns1__NDFDgenResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__NDFDgenResponse(struct soap*, const struct ns1__NDFDgenResponse *, const char*, const char*);

#ifndef soap_write_ns1__NDFDgenResponse
#define soap_write_ns1__NDFDgenResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__NDFDgenResponse(soap, data),0) || soap_put_ns1__NDFDgenResponse(soap, data, "ns1:NDFDgenResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__NDFDgenResponse * SOAP_FMAC4 soap_get_ns1__NDFDgenResponse(struct soap*, struct ns1__NDFDgenResponse *, const char*, const char*);

#ifndef soap_read_ns1__NDFDgenResponse
#define soap_read_ns1__NDFDgenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__NDFDgenResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct ns1__NDFDgenResponse * SOAP_FMAC2 soap_instantiate_ns1__NDFDgenResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__NDFDgenResponse * soap_new_ns1__NDFDgenResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__NDFDgenResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__NDFDgenResponse * soap_new_req_ns1__NDFDgenResponse(struct soap *soap, std::string& dwmlOut) { struct ns1__NDFDgenResponse *_p = soap_instantiate_ns1__NDFDgenResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenResponse(soap, _p); _p->dwmlOut = dwmlOut; } return _p; }

inline struct ns1__NDFDgenResponse * soap_new_set_ns1__NDFDgenResponse(struct soap *soap, std::string& dwmlOut) { struct ns1__NDFDgenResponse *_p = soap_instantiate_ns1__NDFDgenResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__NDFDgenResponse(soap, _p); _p->dwmlOut = dwmlOut; } return _p; }

inline void soap_delete_ns1__NDFDgenResponse(struct soap *soap, struct ns1__NDFDgenResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__NDFDgenResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons2__weatherParametersType
#define SOAP_TYPE_PointerTons2__weatherParametersType (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__weatherParametersType(struct soap*, ns2__weatherParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__weatherParametersType(struct soap*, const char *, int, ns2__weatherParametersType *const*, const char *);
SOAP_FMAC3 ns2__weatherParametersType ** SOAP_FMAC4 soap_in_PointerTons2__weatherParametersType(struct soap*, const char*, ns2__weatherParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__weatherParametersType(struct soap*, ns2__weatherParametersType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__weatherParametersType
#define soap_write_PointerTons2__weatherParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__weatherParametersType(soap, data),0) || soap_put_PointerTons2__weatherParametersType(soap, data, "ns2:weatherParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__weatherParametersType ** SOAP_FMAC4 soap_get_PointerTons2__weatherParametersType(struct soap*, ns2__weatherParametersType **, const char*, const char*);

#ifndef soap_read_PointerTons2__weatherParametersType
#define soap_read_PointerTons2__weatherParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__weatherParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
